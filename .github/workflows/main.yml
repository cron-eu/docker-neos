name: Docker Build

on: [ push ]

jobs:
  # Build a docker image for a specific version and using a given target
  build_docker_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [7.2, 7.3]
    steps:
      -
        name: Checkout Sourcecode
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Build Image for php ${{ matrix.php-version }}
        uses: docker/build-push-action@v2
        with:
          build-args:
            COMPOSER_MAJOR_VERSION: 1
          load: true
          tags: croneu/neos:${{ matrix.php-version }}
          target: base
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
      -
        name: Save Docker Image
        run: docker save croneu/neos:${{ matrix.php-version }} > docker-neos-base.tar

      - name: Upload Docker Image as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-neos-base-${{ matrix.php-version }}
          path: docker-neos-base.tar

  test_docker_image:
    needs: build_docker_image
    runs-on: ubuntu-latest
    services:
      db:
        image: mariadb:10.3
        env:
          MYSQL_DATABASE: db
          MYSQL_USER: admin
          MYSQL_PASSWORD: pass
          MYSQL_RANDOM_ROOT_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
    strategy:
      matrix:
        php-version: [7.2]
    steps:
      -
        name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: docker-neos-base-${{ matrix.php-version }}
      -
        name: Load Docker Image
        run: docker load -i docker-neos-base.tar
      -
        name: Run Docker Image
        run: |
          docker run --name=web --link=db:db \
               --env="REPOSITORY_URL=https://github.com/neos/neos-development-distribution" \
               --env="VERSION=3.3" \
               --env="SITE_PACKAGE=Neos.Demo" \
               croneu/neos:${{ matrix.php-version }}
      # -
      #   name: Test Neos Provisioning
      #   run: while true; do if docker logs web 2>&1 | grep "ready to handle connections"; then break; else echo "Waiting for web container to finish provisioning..." && sleep 10; fi done
