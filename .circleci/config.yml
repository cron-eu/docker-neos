version: 2.1
commands:
  run_database:
    description: "Run a MySQL compatible docker container"
    parameters:
      DB_NAME:
        type: string
        default: "db"
    steps:
      - run:
          name: Run the docker DB container
          # use the official mariadb image using default values (user/pass etc.)
          command: |
            docker run -d --name=db \
              --env="MYSQL_DATABASE=<< parameters.DB_NAME >>" \
              --env="MYSQL_USER=admin" \
              --env="MYSQL_PASSWORD=pass" \
              --env="MYSQL_RANDOM_ROOT_PASSWORD=yes" \
              --env="MYSQL_ROOT_PASSWORD=password" \
              mariadb:latest

  build_docker_image:
    description: "Build a Docker Image"
    parameters:
      image_name:
        type: string
        default: 'docker-image'
      file:
        type: string
        default: Dockerfile
    steps:
      - run:
          command: docker build --tag=<< parameters.image_name >> -f << parameters.file >> .

  run_docker_image:
    description: "Runs a docker image in foreground"
    parameters:
      image_name:
        type: string
        default: 'docker-image'
    steps:
      - run:
          name: Run the docker web container
          background: true
          command: |
            docker run --name=web --link=db:db \
              --env="DB_USER=root" \
              --env="DB_PASS=password" \
              --env="REPOSITORY_URL=https://github.com/neos/neos-development-distribution" \
              --env="VERSION=3.3" \
              --env="SITE_PACKAGE=Neos.Demo" \
              << parameters.image_name >>
      - run: while true; do if docker logs web 2>&1 | grep "ready to handle connections"; then break; else echo "Waiting for web container to finish provisioning..." && sleep 10; fi done

  test_neos_demosite:
    description: "Test if the Neos DemoSite renders OK"
    steps:
      - run:
          name: Do basic front-end tests
          command: |
            docker run --rm --volumes-from=web --link=web alpine /bin/sh -c 'apk add curl -q \
             && curl -s -L --head http://web | grep "HTTP/1.1 200 OK" \
             && curl -s -L --head http://web | grep "X-Flow-Powered" \
             && curl -s -L http://web | grep "This website is powered by Neos"'

jobs:
  test:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - run_database
      - build_docker_image
      - run_docker_image
      - test_neos_demosite

  test-behat:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - run_database:
          DB_NAME: db_behat
      - build_docker_image
      - build_docker_image:
          file: Dockerfile-behat
      - run_docker_image
      - test_neos_demosite

workflows:
  version: 2
  all:
    jobs:
      - test
      - test-behat:
          requires:
            - test
